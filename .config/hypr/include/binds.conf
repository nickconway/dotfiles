$mainMod = SUPER # Sets "Windows" key as main modifier

# hyprlang if backgroundRed
bind = $mainMod SHIFT, O, shadeactivewindow, multi-chroma bg=[$backgroundRed $backgroundGreen $backgroundBlue] bg2=[0 0 0]
# hyprlang endif

bind = $mainMod, Return, exec, TMUX_AUTO_SESSION=y kitty

bind = $mainMod, Q, killactive,
bind = $mainMod, E, exec, nautilus -w
bind = $mainMod SHIFT, B, exec, chromium
bind = $mainMod SHIFT, F, togglefloating,
bind = ALT, Tab, exec, rofi -show window -config ~/.config/rofi/styles/style_2.rasi
bind = $mainMod SHIFT, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, Period, exec, nohup emoji-picker &>/dev/null
bind = $mainMod, W, exec, ~/.config/rofi/scripts/power-menu
bind = $mainMod, L, exec, hyprlock
bind = $mainMod SHIFT, L, exec, systemctl suspend
bind = $mainMod, F11, fullscreen

bind = $mainMod ALT, S, exec, hyprland-toggle-monitor-scaling

bind = $mainMod SHIFT, C, exec, hyprland-special theme

bind = $mainMod, M, exec, pactl set-source-mute $(pactl get-default-source) toggle
bind = $mainMod SHIFT, M, exec, ~/.config/rofi/scripts/music-menu

bind = ALT, SPACE, exec, rofi -show drun -config ~/.config/rofi/styles/style_2.rasi

bind = $mainMod, R, exec, hyprland-toggle-bitdepth

bind = $mainMod, P, exec, RBW_PROFILE=hyprland nohup pw &> /dev/null

bind = $mainMod, SUPER_L, exec, pidof waybar && killall waybar || waybar
bind = $mainMod, SUPER_R, exec, pidof waybar && killall waybar || waybar

bind = $mainMod, Grave, exec, hyprland-special scratch
bind = $mainMod SHIFT, U, exec, hyprland-special update

bind = $mainMod, O, exec, hyprctl dispatch overview:toggle

bind = $mainMod, N, exec, swaync-client -t
bind = $mainMod SHIFT, D, exec, toggle-dnd

bind = $mainMod, V, exec, nohup clipboard-history &> /dev/null

bind = $mainMod SHIFT, S, exec, screenshot monitor
bind = $mainMod, S, exec, ~/.config/rofi/scripts/screenshot-menu
bind = $mainMod, C, exec, color-picker

bindel = , XF86AudioLowerVolume, exec, pamixer -u && pamixer -d 1 && show-audio
bindel = , XF86AudioRaiseVolume, exec, pamixer -u && pamixer -i 1 && show-audio
bindel = , XF86AudioMute, exec, pamixer -t && notify-send "Audio $([[ $(pamixer --get-mute) == true ]] && echo muted || echo unmuted)" -h string:synchronous:audio
bindel = , F1, exec, pamixer -t && notify-send "Audio $([[ $(pamixer --get-mute) == true ]] && echo muted || echo unmuted)" -h string:synchronous:audio
bindel = , F2, exec, pamixer -u && pamixer -d 1 && show-audio
bindel = , F3, exec, pamixer -u && pamixer -i 1 && show-audio
bindel = $mainMod SHIFT, up, exec, pamixer -u && pamixer -i 1 && show-audio
bindel = $mainMod SHIFT, down, exec, pamixer -u && pamixer -d 1 && show-audio

bindel = , XF86AudioPlay, exec, playerctl play-pause && now-playing
bindel = , XF86AudioNext, exec, playerctl next && now-playing
bindel = , XF86AudioPrev, exec, playerctl previous && now-playing

bindel = , XF86MonBrightnessUp, exec, brightnessctl set 1%- && brightnessctl set 1%- -d 'intel*' && show-brightness
bindel = , XF86MonBrightnessDown, exec, brightnessctl set +1% && brightnessctl set +1% -d 'intel*' && show-brightness
bindel = , F5, exec, brightnessctl set 1%- && brightnessctl set 1%- -d 'intel*' && show-brightness
bindel = , F6, exec, brightnessctl set +1% && brightnessctl set +1% -d 'intel*' && show-brightness
bindel = $mainMod ALT, up, exec, brightnessctl set +1% && brightnessctl set +1% -d 'intel*' && show-brightness
bindel = $mainMod ALT, down, exec, brightnessctl set 1%- && brightnessctl set 1%- -d 'intel*' && show-brightness

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod SHIFT, left, workspace, m-1
bind = $mainMod SHIFT, right, workspace, m+1

bind = $mainMod SHIFT ALT, left, movetoworkspace, r-1
bind = $mainMod SHIFT ALT, right, movetoworkspace, r+1

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, exec, hyprland-workspace 1
bind = $mainMod, 2, exec, hyprland-workspace 2
bind = $mainMod, 3, exec, hyprland-workspace 3
bind = $mainMod, 4, exec, hyprland-workspace 4
bind = $mainMod, 5, exec, hyprland-workspace 5
bind = $mainMod, 6, exec, hyprland-workspace 6
bind = $mainMod, 7, exec, hyprland-workspace 7
bind = $mainMod, 8, exec, hyprland-workspace 8
bind = $mainMod, 9, exec, hyprland-workspace 9
bind = $mainMod, 0, exec, hyprland-workspace 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod CTRL, left, exec, hyprland-workspace prev
bind = $mainMod CTRL, right, exec, hyprland-workspace next
bind = $mainMod SHIFT CTRL, left, movecurrentworkspacetomonitor, -1
bind = $mainMod SHIFT CTRL, right, movecurrentworkspacetomonitor, +1

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod SHIFT, mouse:272, resizewindow 1
bindm = $mainMod, mouse:273, resizewindow
bindm = $mainMod SHIFT, mouse:273, resizewindow 1

bind = $mainMod, U, exec, pypr fetch_client_menu
bind = $mainMod SHIFT, Z, exec, pypr zoom ++0.5             # zooms in the focused workspace
bind = $mainMod, Z, exec, pypr zoom                         # toggle zooming

bindl= , switch:on:Lid Switch, exec, hyprsleep
