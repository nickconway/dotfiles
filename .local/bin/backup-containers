#!/bin/bash

cd
if sudo systemctl is-active --quiet docker; then export RESTART=true; else export RESTART=false; fi

if [[ ! -e ~/Docker ]]; then
    echo Docker directory does not exist
    exit 1
fi

if [[ ! -e /mnt/nas ]] || [[ -z "$(ls -A /mnt/nas)" ]]; then
    echo NAS directory does not exist or is empty
    exit 1
fi

function fail() {
    curl -f -s -d "Docker backup on $(uname -n) failed" https://ntfy.conway.dev/backups -H "Authorization: Bearer ${NTFY_TOKEN}"
}

function clean() {
    if [[ $RESTART == 'true' ]]; then
        sudo systemctl start docker.socket docker.service
    fi
}

trap fail ERR
trap clean EXIT

set -euo pipefail

DATE=$(date +"%d-%b-%Y-%H-%M-%S")

export BASE_DIR="/mnt/nas/backups/docker"
export BORG_REPO="$BASE_DIR/${1:-$(uname -n)}"
export BORG_EXIT_CODES=modern

dump-containers

sudo systemctl stop docker.socket docker.service

mkdir -p $BASE_DIR
if [[ ! -e "$BORG_REPO" ]]; then
    sudo -E $(which borg) init $BORG_REPO -e repokey
fi

sudo -E $(which borg) create --compression lz4 --stats --progress --show-rc --exclude-caches ::"$DATE" Docker

sudo -E $(which borg) list "$BORG_REPO" | grep "$DATE"
sudo -E $(which borg) prune -v --progress --list --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1
sudo -E $(which borg) compact -v --progress
