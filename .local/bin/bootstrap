#!/usr/bin/env bash
set -eou pipefail

function err() {
    if [[ -n $NTFY_TOKEN ]]; then
        curl -d "Bootstrapping failed on $(uname -n)" https://notifications.conway.dev/notifications -H "Authorization: Bearer ${NTFY_TOKEN}" &> /dev/null
    fi
    exit 1
}

trap err ERR

export PATH=~/bin:~/.local/bin:$PATH
cd

touch .hushlogin
mkdir -p ~/.local/bin

if ! [[ -e ~/.local/share/yadm/repo.git ]]; then
    yay -S --noconfirm --needed yadm
    yadm clone https://github.com/nickconway/dotfiles
    yadm remote set-url origin git@github.com:nickconway/dotfiles.git --push
    yadm decrypt
    yadm alt

    [[ -e .config/shell/common/encrypted.sh ]] && . ~/.config/shell/common/encrypted.sh
    [[ -e .config/shell/common/environment.sh ]] && . ~/.config/shell/common/environment.sh

    eval $(grep yconfig ~/.config/shell/common/alias.sh | cut -d "=" -f 2 | cut -c 2- | rev | cut -c 2- | rev)
fi

if command -v termux-reload-settings > /dev/null; then
    apt update -y && apt upgrade -y
    pkg install openssh starship rust termux-api gnupg fzf dnsutils zsh python3 yq imagemagick binutils pass rip bat git-delta fd ripgrep zoxide gh -y
    mkdir -p ~/.zsh
    cd ~/.config/zsh
    [[ -e ~/.config/zsh/zsh-autosuggestions ]] || git clone https://github.com/zsh-users/zsh-autosuggestions
    [[ -e ~/.config/zsh/zsh-completions ]] || git clone https://github.com/zsh-users/zsh-completions.git
    [[ -e ~/.config/zsh/zsh-syntax-highlighting ]] || git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
    cd ~
    GPG_TTY=$(tty)
    export GPG_TTY
    yadm decrypt
    yadm alt
    chsh -s zsh
fi

if command -v termux-reload-settings > /dev/null; then
    exit
fi

if [[ $(yadm config --get-all local.class) == "" ]]; then
    YADM_CLASS=
    while [[ "$YADM_CLASS" != "q" ]] || [[ "$YADM_CLASS" == "" ]]; do
        if [[ "$YADM_CLASS" != "" ]]; then
            yadm config --add local.class "$YADM_CLASS"
        fi
        read -rp "Enter YADM class [$(~/.local/bin/get-yadm-classes)] (q to quit): " YADM_CLASS
    done
    yadm alt
fi

if [[ $(uname -n) == "steamdeck" ]]; then
    sudo systemctl enable --now sshd

    if [[ ! -e ~/.local/source/deck-tailscale ]]; then
        git clone https://github.com/tailscale-dev/deck-tailscale.git ~/.local/source/deck-tailscale
        cd ~/.local/source/deck-tailscale
        sudo bash tailscale.sh
    fi
    source /etc/profile.d/tailscale.sh
    sudo tailscale up --ssh --accept-routes --operator="$(whoami)" --qr --advertise-tags=tag:client,tag:server
    sudo tailscale set --auto-update

    distrobox create -n arch -i archlinux
    distrobox enter arch
    exit
fi

if ping -c 1 $WORK_SERVER 2>/dev/null | grep -e "^[^;]" && grep '^flags.*hypervisor' /proc/cpuinfo &> /dev/null && ! [[ "$(systemd-detect-virt)" == "wsl" ]]; then
    . ~/.config/shell/common/work.sh && work-setup
fi

if ! command -v python > /dev/null && command -v python3 > /dev/null; then
    ln -s "$(which python3)" ~/.local/bin/python
fi

if ! command -v uv > /dev/null; then
    curl -LsSf https://astral.sh/uv/install.sh | sh
fi

for C in "community.general" "ansible.posix"; do
    uvx --from ansible-core ansible-galaxy collection install "$C" > /dev/null
done

if [[ -e "$XDG_RUNTIME_DIR" ]]; then
    if [ -S "$XDG_RUNTIME_DIR"/agent.sock ]; then
        export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR"/agent.sock
    else
        eval "$(ssh-agent -t 12h -s -a "$XDG_RUNTIME_DIR"/agent.sock)"
    fi
else
    eval "$(ssh-agent)"
fi

mkdir -p ~/Git

if ! [[ -e ~/Git/ansible ]]; then
    git clone https://github.com/nickconway/ansible ~/Git/ansible &> /dev/null
fi
cd ~/Git/ansible
git remote set-url origin git@github.com:nickconway/ansible --push
git pull &> /dev/null

cd ~/Git/ansible/bootstrap

if ansible-vault-password &> /dev/null; then
    uvx --with ansible --with netaddr --from ansible-core --with keyring ansible-playbook main.yml --vault-id ~/.local/bin/ansible-vault-password -l 'localhost' $@
else
    uvx --with ansible --with netaddr --from ansible-core --with keyring ansible-playbook main.yml --ask-vault-pass -l 'localhost' $@
fi

if [[ -n $NTFY_TOKEN ]]; then
    curl -d "Bootstrapping complete on $(uname -n)" https://notifications.conway.dev/notifications -H "Authorization: Bearer ${NTFY_TOKEN}" &> /dev/null
fi
