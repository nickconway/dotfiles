#!/bin/bash

set -euo pipefail

for d in ~/docker/*; do
    cd $d

    if [[ $# -ne 0 && "$1" != "$(basename "$(pwd)")" ]]; then
        continue
    fi

    if [[ -e compose.yml ]] && grep -q -e "container_name:.*postgres" compose.yml; then
        CONTAINER_NAME="$(grep -e 'container_name:.*postgres' compose.yml | awk '{print $2}')"
        DATABASE="$(docker exec $CONTAINER_NAME bash -c 'echo $POSTGRES_DB')"
        USERNAME="$(docker exec $CONTAINER_NAME bash -c 'echo $POSTGRES_USER')"
        PASSWORD="$(docker exec $CONTAINER_NAME bash -c 'echo $POSTGRES_PASSWORD')"
        [[ -n "$CONTAINER_NAME" ]] && [[ -n "$DATABASE" ]] && [[ -n "$USERNAME" ]] && [[ -n "$PASSWORD" ]]
        echo "Dumping $d"
        docker exec "$CONTAINER_NAME" pg_dump -c --if-exists --username "$USERNAME" -d "$DATABASE" > dump.sql
    elif [[ -e compose.yml ]] && grep -q -e "container_name:.*mysql" compose.yml; then
        CONTAINER_NAME="$(grep -e 'container_name:.*mysql' compose.yml | awk '{print $2}')"
        DATABASE="$(docker exec $CONTAINER_NAME bash -c 'echo $MYSQL_DATABASE')"
        USERNAME="$(docker exec $CONTAINER_NAME bash -c 'echo $MYSQL_USER')"
        PASSWORD="$(docker exec $CONTAINER_NAME bash -c 'echo $MYSQL_PASSWORD')"
        [[ -n "$CONTAINER_NAME" ]] && [[ -n "$DATABASE" ]] && [[ -n "$USERNAME" ]] && [[ -n "$PASSWORD" ]]
        echo "Dumping $d"
        docker exec "$CONTAINER_NAME" /usr/bin/mysqldump -u "$USERNAME" --password="$PASSWORD" "$DATABASE" --no-tablespaces > dump.sql
    elif [[ -e compose.yml ]] && grep -q -e "container_name:.*mongo" compose.yml; then
        CONTAINER_NAME="$(grep -e 'container_name:.*mongo' compose.yml | awk '{print $2}')"
        [[ -n "$CONTAINER_NAME" ]]
        echo "Dumping $d"
        docker exec "$CONTAINER_NAME" mongodump --archive > mongo.dump
    fi
done
