#!/usr/bin/env bash
set -euo pipefail

command() (
    [[ -n "$(tmux display -p '#{client_last_session}')" ]] && tmux display -p '#{client_last_session}'

    if [[ -n "$(tmux display -p '#{client_last_session}')" ]]; then
        tmux list-sessions -F "#S" | grep -v "^$(tmux display -p '#{client_last_session}')$" | grep -v "^$(tmux display-message -p '#S')$"
    else
        tmux list-sessions -F "#S" | grep -v "^$(tmux display-message -p '#S')$"
    fi

    tmux display-message -p '#S'
    find "$([[ -e "$PROJECT_DIR" ]] && echo "$PROJECT_DIR")" -mindepth 1 -maxdepth 1 -type d
    zoxide query -l
)

if [[ "${1:-}" == "--all" ]]; then
    command | sed "s|^$HOME|~|g"
    exit
elif [[ "${1:-}" == "--sessions" ]]; then
    tmux list-sessions -F "#S"
    exit
elif [[ "${1:-}" == "--directories" ]]; then
    find "$([[ -e "$PROJECT_DIR" ]] && echo "$PROJECT_DIR")" -mindepth 1 -maxdepth 1 -type d
    zoxide query -l
    exit
elif [[ "${1:-}" == "--directories" ]]; then
    find "$([[ -e "$PROJECT_DIR" ]] && echo "$PROJECT_DIR")" -mindepth 1 -maxdepth 1 -type d
    zoxide query -l
    exit
fi

if [[ $# -eq 0 ]]; then
    RENAME_SESSION_EXEC='bash -c '\'' printf >&2 "New name: "; read name; tmux rename-session -t {1} "${name}"; '\'''
    RENAME_SESSION="ctrl-r:execute($RENAME_SESSION_EXEC)+reload(tmux-sessionizer --sessions)+change-border-label( Tmux Sessionizer (Sessions) )+change-prompt(ǂ > )"

    export SELECTED=$(command | sed "s|^$HOME|~|g" | fzft --border-label=" Tmux Sessionizer " \
        --prompt=" > " \
        --preview 'fzf-preview {}' \
        --header "ctrl-w   ctrl-s ǂ  ctrl-z   ctrl-a ∀  ctrl-r 󰑕  ctrl-u   crtl-d " \
        --bind "ctrl-a:change-border-label( Tmux Sessionizer )+change-prompt( > )+reload(tmux-sessionizer --all)" \
        --bind "ctrl-z:change-border-label( Tmux Sessionizer (Directories) )+change-prompt( > )+reload(tmux-sessionizer --directories)" \
        --bind "ctrl-w:change-border-label( Tmux Sessionizer (Windows) )+change-prompt( > )+reload(tmux list-windows -a -F '#{session_name}:#{window_name}')" \
        --bind "$RENAME_SESSION" \
        --bind "ctrl-s:change-border-label( Tmux Sessionizer (Sessions) )+change-prompt(ǂ > )+reload(tmux-sessionizer --sessions)" | sed "s|^~|$HOME|g")
else
    if command -v zoxide &>/dev/null; then
        if [[ -e "$PWD/$@" ]]; then
            export SELECTED="$PWD/$@"
        else
            export SELECTED="$(zoxide query $1 2>/dev/null || echo "$@")"
        fi
    else
        export SELECTED="$@"
    fi
fi

if [[ -z $SELECTED ]]; then
    exit 0
fi

for TMUXP_START_DIR in ${SELECTED[@]}; do
    export SELECTED_FILE=$(basename "$TMUXP_START_DIR" | tr . _)
    export TMUXP_START_DIR="$TMUXP_START_DIR"
    export TMUXP_SESSION_NAME=$(basename "$TMUXP_START_DIR" | tr . _)

    export TMUX_RUNNING=$(pgrep tmux)

    cd "$TMUXP_START_DIR" 2>/dev/null || true

    if tmux has-session -t="$TMUXP_SESSION_NAME" 2>/dev/null; then
        tmux switch-client -t "$TMUXP_SESSION_NAME"
    elif [[ -e "$TMUXP_START_DIR"/.tmuxp.yaml ]]; then
        tmuxp load "$TMUXP_START_DIR" -y >/dev/null
    elif [[ -e ~/.config/tmuxp/"$SELECTED_FILE".yaml ]]; then
        tmuxp load ~/.config/tmuxp/"$SELECTED_FILE".yaml -y >/dev/null
    elif [[ -z $TMUX ]] && [[ -z $TMUX_RUNNING ]]; then
        tmux new-session -s "$TMUXP_SESSION_NAME" -c "$TMUXP_START_DIR"
    else
        started=
        for F in ~/.config/tmuxp/*; do
            F="$(basename "$F")"
            if [[ -e "$TMUXP_START_DIR/${F%.*}" || -e "$TMUXP_START_DIR/.${F%.*}" ]]; then
                started=true
                tmuxp load ~/.config/tmuxp/"$F" -y >/dev/null
                break
            fi
        done
        [[ -n "$started" ]] && continue

        if [[ ! -e "$TMUXP_START_DIR" ]]; then
            tmux new-session -ds "$TMUXP_SESSION_NAME" -c "$PWD"
        else
            tmux new-session -ds "$TMUXP_SESSION_NAME" -c "$TMUXP_START_DIR"
        fi
        tmux switch-client -t "$TMUXP_SESSION_NAME"
    fi
done
