#!/usr/bin/env bash

if [[ $# -eq 1 ]]; then
    dir=$1
    command() (find "$dir" -mindepth 1 -maxdepth 1 -type d)
else
    command() (find ~/ "$([[ -e "$PROJECT_DIR" ]] && echo "$PROJECT_DIR")" -mindepth 1 -maxdepth 1 -type d; zoxide query -l; tmux list-sessions -F "#S")
fi

export TMUXP_START_DIR=$(command | sort | uniq | fzf-tmux $(echo $FZF_TMUX_OPTS) --prompt="î¯ˆ > " --preview 'eza {1} -1 --icons --color=always 2>/dev/null || ls {1} --color')

if [[ -z $TMUXP_START_DIR ]]; then
    exit 0
fi

export SELECTED_FILE=$(basename "$TMUXP_START_DIR")
export TMUXP_SESSION_NAME=$(basename "$TMUXP_START_DIR" | tr . _)

export TMUX_RUNNING=$(pgrep tmux)

if tmux has-session -t="$TMUXP_SESSION_NAME" 2> /dev/null; then
    tmux switch-client -t "$TMUXP_SESSION_NAME"
elif [[ -e ~/.config/tmuxp/"$SELECTED_FILE".yaml ]]; then
    tmuxp load ~/.config/tmuxp/"$SELECTED_FILE".yaml -y > /dev/null
elif [[ -z $TMUX ]] && [[ -z $TMUX_RUNNING ]]; then
    tmux new-session -s "$TMUXP_SESSION_NAME" -c "$TMUXP_START_DIR"
else
    for F in ~/.config/tmuxp/*; do
        F="$(basename "$F")"
        if [[ -e "$TMUXP_START_DIR/${F%.*}" || -e "$TMUXP_START_DIR/.${F%.*}" ]]; then
            tmuxp load ~/.config/tmuxp/"$F" -y > /dev/null
            exit
        fi
    done
    tmux new-session -ds "$TMUXP_SESSION_NAME" -c "$TMUXP_START_DIR"
    tmux switch-client -t "$TMUXP_SESSION_NAME"
fi
